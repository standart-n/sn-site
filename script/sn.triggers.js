// Generated by CoffeeScript 1.3.3

$(function() {
  var methods;
  methods = {
    init: function() {
      if ($("#claims").html() !== "") {
        $(this).snTriggers('table');
      }
      if ($("#pagination").html() !== "") {
        $(this).snTriggers('pagination');
      }
      if ($("#signin").html() !== "") {
        return $(this).snTriggers('signin');
      }
    },
    signin: function() {
      var th;
      th = $(this);
      return $("#fSignin").on("submit", function(e) {
        e.preventDefault();
        return th.snEvents({
          href: '#signin'
        });
      });
    },
    table: function() {
      var th;
      th = $(this);
      $(".status").on("keyup", function() {
        return th.snAjax('sendRequest', {
          action: 'edit',
          id: $(this).data('id'),
          message: $(this).val(),
          debug: false
        });
      });
      return $(".status").on("blur", function() {
        return th.snAjax('sendRequest', {
          action: 'edit',
          id: $(this).data('id'),
          message: $(this).val(),
          debug: false
        });
      });
    },
    pagination: function() {
      var th;
      th = $(this);
      $("a#prev").on("click", function(e) {
        e.preventDefault();
        $("#page").val($("#page").val() * 1 - 1);
        return th.snAjax('sendRequest', {
          action: 'signin',
          debug: false
        });
      });
      $("a.list").on("click", function(e) {
        e.preventDefault();
        $("#page").val($(this).data("page"));
        return th.snAjax('sendRequest', {
          action: 'signin',
          debug: false
        });
      });
      return $("a#next").on("click", function(e) {
        e.preventDefault();
        $("#page").val($("#page").val() * 1 + 1);
        return th.snAjax('sendRequest', {
          action: 'signin',
          debug: false
        });
      });
    }
  };
  return $.fn.snTriggers = function(sn) {
    if (!sn) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      if (typeof sn === 'object' || !sn) {
        return methods.init.apply(this, arguments);
      } else {
        return $.error('Метод ' + sn + ' не существует');
      }
    }
  };
});
